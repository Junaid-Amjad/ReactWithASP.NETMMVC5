{"version":3,"sources":["App/api/agent.ts","App/stores/activityStore.ts","App/stores/savedFileStore.ts","App/stores/userStore.ts","App/stores/store.ts","App/stores/commonStore.ts","App/stores/modalStore.ts","App/Layout/Navbar.tsx","App/Layout/LoadingComponents.tsx","features/activities/dashboard/ActivityFilters.tsx","features/activities/dashboard/ActivityListItem.tsx","features/activities/dashboard/ActivityList.tsx","features/activities/dashboard/ActivityDashboard.tsx","App/common/form/MyTextInput.tsx","features/users/LoginForm.tsx","features/errors/ValidationError.tsx","features/users/RegisterForm.tsx","features/Home/HomePage.tsx","App/common/form/MyTextArea.tsx","App/common/form/MySelectInput.tsx","App/common/form/MyDateInput.tsx","App/common/options/CategoryOptions.ts","features/activities/form/ActivityForm.tsx","features/activities/details/ActivityDetailedChat.tsx","features/activities/details/ActivityDetailedHeader.tsx","features/activities/details/ActivityDetailedInfo.tsx","features/activities/details/ActivityDetailedSideBar.tsx","features/activities/details/ActivityDetail.tsx","features/errors/TestError.tsx","features/errors/NotFound.tsx","features/errors/ServerError.tsx","App/common/modals/ModalContainer.tsx","features/filefolder/SavedFile.tsx","App/Layout/PrivateRoute.tsx","App/Layout/App.tsx","reportWebVitals.ts","App/Layout/ScrollToTop.tsx","index.tsx"],"names":["axios","defaults","baseURL","process","interceptors","request","use","config","token","store","commonStore","headers","Authorization","response","a","error","data","status","toast","method","errors","hasOwnProperty","history","push","modalStateErrors","key","flat","setServerError","Promise","reject","responseBody","requests","url","get","then","agent","Activities","list","details","id","create","activity","post","update","put","activityID","delete","Account","current","login","user","register","SavedFiles","getFileNames","getDirectoryDetail","Pathname","ActivityStore","activityRegistry","Map","selectedActivity","undefined","editMode","loading","loadingInitial","loadActivities","activities","runInAction","forEach","setActivity","console","log","date","Date","set","loadActivity","getActivity","createActivity","updateActivity","deleteActivity","makeAutoObservable","this","Array","from","values","sort","b","getDate","Object","entries","ActivitiesByDate","reduce","format","SavedFileStore","savedRegistry","DirectoryLink","APIfirstParameter","loadSavedFiles","clear","savedFiles","validateRow","savedFile","PathName","startingRow","found","EndingRow","length","row","splice","loadDirectoryFiles","savedDirectory","unshift","split","object","i","path","SavedRegistrySort","UserStore","creds","setToken","modalStore","closeModal","logout","window","localStorage","removeItem","getUser","activityStore","getItem","appLoaded","setAppLoaded","reaction","setItem","userStore","modal","open","body","openModal","Content","savedFileStore","StoreContext","createContext","useStore","useContext","observer","Menu","inverted","fixed","Container","Item","as","NavLink","exact","to","header","src","alt","style","marginRight","name","Button","positive","content","position","Image","image","avatar","spaced","Dropdown","pointing","text","displayName","Link","username","icon","onClick","LoadingComponent","Dimmer","active","Loader","ActivityFilters","vertical","size","width","marginTop","Header","attached","color","ActivityListItem","SegmentGroup","Segment","Group","circular","title","Description","Icon","venue","secondary","clearing","description","floated","groupedActivities","map","group","sub","useEffect","Grid","Column","MyTextInput","props","useField","fields","meta","Form","Field","touched","label","Label","basic","initialValues","email","password","onSubmit","setErrors","catch","handleSubmit","isSubmitting","className","autoComplete","textAlign","placeholder","type","render","marginBottom","fluid","ValidationError","Message","List","err","userName","validationSchema","Yup","required","isValid","dirty","disabled","isLoggedIn","MyTextArea","MySelectInput","helpers","Select","clearable","options","value","onChange","e","d","setValue","onBlur","setTouched","MyDateInput","selected","categoryOptions","useHistory","useParams","useState","category","city","nullable","enableReinitialize","newActivity","uuid","handleFormSubmit","rows","showTimeSelect","timeCaption","dateFormat","placeholderText","border","Comment","Avatar","Author","Metadata","Text","Actions","Action","reply","TextArea","labelPosition","primary","activityImageStyle","filter","activityImageTextStyle","bottom","left","height","padding","verticalAlign","relaxed","divided","ribbon","Extra","ActivityDetailedSideBar","TestErrors","widths","baseUrl","NotFound","Inline","message","Modal","onClose","BreadCrumbPath","getLoadedSavedFiles","pathname","PathLink","Breadcrumb","Section","Divider","isDirectory","Row","columns","isSamePath","controls","PrivateRoute","Component","component","rest","location","useLocation","finally","hideProgressBar","HomePage","ActivityDashboard","ActivityDetails","ActivityForm","SavedFile","ServerError","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ScrollToTop","scrollTo","createBrowserHistory","ReactDOM","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.da6492a8.chunk.js","sourcesContent":["import axios, { AxiosError, AxiosResponse } from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport { history } from '../..';\r\nimport { Activity } from '../Models/activity';\r\nimport { SavedFile } from '../Models/savedFile';\r\nimport { User, UserFormValues } from '../Models/user';\r\nimport { store } from '../stores/store';\r\n\r\nconst sleep =(delay: number) => {\r\n    return new Promise((resolve) =>{\r\n        setTimeout(resolve,delay)\r\n    })\r\n}\r\n\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\n\r\naxios.interceptors.request.use(config =>{\r\n    const token = store.commonStore.token;\r\n    if(token) config.headers.Authorization = `Bearer ${token}`;\r\n    return config;\r\n})\r\n\r\naxios.interceptors.response.use(async response => {\r\n        if(process.env.NODE_ENV === 'development') await sleep(1000);\r\n        return response;\r\n},(error: AxiosError)=>{\r\n    const {data,status,config} = error.response!;\r\n    switch(status){\r\n        case 400:\r\n            if(typeof data === 'string'){\r\n                toast.error('Bad Request');\r\n            }\r\n            if(config.method === 'get' && data.errors.hasOwnProperty('id')){\r\n                history.push('/not-found');\r\n            }\r\n            if(data.errors){\r\n                const modalStateErrors =[];\r\n                for(const key in data.errors){\r\n                    if(data.errors[key]){\r\n                        modalStateErrors.push(data.errors[key]);\r\n                    }\r\n                }\r\n                throw modalStateErrors.flat();                                \r\n            }\r\n            \r\n            break;\r\n        case 401:\r\n            toast.error('unauthorized');\r\n            break;\r\n        case 404:\r\n            history.push('/not-found');\r\n            break;\r\n        case 500:\r\n            store.commonStore.setServerError(data);\r\n            history.push('/server-error');\r\n            break;\r\n        \r\n    }\r\n    return Promise.reject(error);    \r\n})\r\n\r\nconst responseBody =<T> (response: AxiosResponse<T>) => response.data;\r\n\r\nconst requests ={\r\n    get: <T>(url: string) => axios.get<T>(url).then(responseBody),\r\n    post: <T>(url: string,body:{}) => axios.post<T>(url,{}).then(responseBody),\r\n    put: <T>(url: string,body:{}) => axios.put<T>(url,{}).then(responseBody),\r\n    del: <T>(url: string) => axios.delete<T>(url).then(responseBody),\r\n    \r\n}\r\n\r\nconst Activities ={\r\n    list: () => requests.get<Activity[]>('/activities'),\r\n    details: (id:string) => requests.get<Activity>(`/activities/${id}`),\r\n    create:(activity: Activity) => axios.post<void>(`/activities`,activity), //requests.post<void>(`/activities`,activity),\r\n    update:(activity: Activity) => axios.put<void>(`/activities/${activity.activityID}`,activity),\r\n    delete:(id:string) => axios.delete<void>(`/activities/${id}`)\r\n}\r\n\r\nconst Account={\r\n    current: ()=> requests.get<User>('/Account'),\r\n    login: (user: UserFormValues)=> axios.post<User>('/Account/login',user).then(responseBody),\r\n    register: (user: UserFormValues) => axios.post<User>('/Account/register',user).then(responseBody)\r\n}\r\n\r\nconst SavedFiles={\r\n    getFileNames: () => requests.get<SavedFile[]>('/SavedFile'),\r\n    getDirectoryDetail: (Pathname:string) => requests.get<SavedFile[]>(`/SavedFile/${Pathname}`)\r\n}\r\n\r\nconst agent ={\r\n    Activities,\r\n    Account,\r\n    SavedFiles\r\n}\r\n\r\nexport default agent;\r\n\r\n","import { makeAutoObservable, runInAction } from \"mobx\";\r\nimport agent from \"../api/agent\";\r\nimport { Activity } from \"../Models/activity\";\r\nimport {format} from 'date-fns';\r\n\r\nexport default class ActivityStore{\r\n    activityRegistry = new Map<string,Activity>();\r\n    selectedActivity: Activity | undefined = undefined;\r\n    editMode= false;\r\n    loading= false;\r\n    loadingInitial = false;\r\n\r\n    constructor(){\r\n        makeAutoObservable(this)\r\n    }\r\n\r\n    get ActivitiesByDate(){\r\n        return Array.from(this.activityRegistry.values()).sort((a,b) => a.date!.getDate()- b.date!.getDate());\r\n    }\r\n\r\n    get groupedActivities(){\r\n        return Object.entries(\r\n            this.ActivitiesByDate.reduce((activities,activity) => {\r\n                const date = format(activity.date!,'dd MMMM yyyy');\r\n                activities[date] = activities[date] ? [...activities[date],activity] : [activity]\r\n                return activities;\r\n            },{} as {[key:string]:Activity[]})\r\n        )\r\n    }\r\n\r\n    loadActivities = async () => {\r\n        this.loadingInitial=true;        \r\n        try{\r\n            const activities = await agent.Activities.list();\r\n            runInAction(() => {\r\n                activities.forEach(activity =>{\r\n                    this.setActivity(activity);\r\n                })\r\n                this.loadingInitial=false;    \r\n            })\r\n        }\r\n        catch(error){\r\n            console.log(error);\r\n            runInAction(() => {\r\n                this.loadingInitial=false;\r\n            })\r\n\r\n        }\r\n\r\n    }\r\n    private setActivity = (activity:Activity) =>{\r\n        activity.date = new Date(activity.date!);\r\n        this.activityRegistry.set(activity.activityID,activity);\r\n    }\r\n    loadActivity = async (id:string) =>{\r\n        let activity=this.getActivity(id);\r\n        if(activity){\r\n            this.selectedActivity = activity;\r\n            return activity;            \r\n        }else{\r\n            this.loadingInitial=true;\r\n            try{\r\n                activity = await agent.Activities.details(id);\r\n                this.setActivity(activity);\r\n                runInAction(() =>{\r\n                    this.selectedActivity = activity;\r\n                    this.loadingInitial=false;\r\n                })\r\n                return activity;\r\n            }\r\n            catch(error){\r\n                console.log(error);\r\n                this.loadingInitial=false;\r\n            }\r\n        }\r\n    }\r\n\r\n    private getActivity = (id: string) => {\r\n        return this.activityRegistry.get(id);\r\n    }\r\n\r\n\r\n    createActivity = async (activity:Activity) => {\r\n        this.loading=true;\r\n        try{            \r\n            await agent.Activities.create(activity);\r\n            \r\n            runInAction(() => {\r\n                this.activityRegistry.set(activity.activityID,activity);\r\n                this.selectedActivity = activity;\r\n                this.editMode=false;\r\n                this.loading=false;\r\n            })\r\n        }\r\n        catch(Error){\r\n            console.log(Error);\r\n            runInAction(() => {\r\n                this.loading=false;\r\n            })\r\n        }\r\n    }\r\n    updateActivity = async (activity:Activity) => {\r\n        this.loading = true;\r\n        try{\r\n            await agent.Activities.update(activity);\r\n            runInAction(() => {\r\n                this.activityRegistry.set(activity.activityID,activity);\r\n                this.selectedActivity = activity;\r\n                this.editMode=false;\r\n                this.loading=false;\r\n            })\r\n        }\r\n        catch(Error){\r\n            console.log(Error);\r\n            runInAction(() =>{\r\n                this.loading=false;\r\n            })\r\n        }\r\n    }\r\n    deleteActivity = async (id:string) => {\r\n        this.loading=true;\r\n        try{\r\n            await agent.Activities.delete(id);\r\n            runInAction(() =>{\r\n                this.activityRegistry.delete(id);\r\n                this.loading=false;\r\n\r\n            })\r\n        }\r\n        catch(Error){\r\n            console.log(Error);\r\n            runInAction(() => {\r\n                this.loading=false;\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n}","import { makeAutoObservable, runInAction } from \"mobx\";\r\nimport agent from \"../api/agent\";\r\nimport {  SavedFile } from \"../Models/savedFile\";\r\n\r\n\r\nexport default class SavedFileStore{\r\n    loadingInitial= false;\r\n    savedRegistry = new Map<string,SavedFile>();\r\n    DirectoryLink:string[] = [];\r\n    APIfirstParameter = \"files\";\r\n\r\n    constructor(){\r\n        makeAutoObservable(this);\r\n    }\r\n\r\n    get SavedRegistrySort(){\r\n        return Array.from(this.savedRegistry.values()).sort();\r\n    }\r\n\r\n    get getLoadedSavedFiles(){\r\n        return this.SavedRegistrySort;  \r\n    }\r\n    /*\r\n    get getLoadedDirectoryFiles(){\r\n        return Array.from(this.DirectoryLink);    \r\n    }*/\r\n\r\n    loadSavedFiles = async () => {\r\n        this.loadingInitial=true; \r\n        this.savedRegistry.clear(); \r\n        try{\r\n            const savedFiles = await agent.SavedFiles.getFileNames();\r\n            runInAction(() => {\r\n\r\n            this.validateRow(this.APIfirstParameter);\r\n            this.DirectoryLink.push(this.APIfirstParameter);            \r\n                savedFiles.forEach(savedFile =>{\r\n                    this.setActivity(savedFile);\r\n                })\r\n                this.loadingInitial=false;    \r\n            })\r\n        }\r\n        catch(error){\r\n            console.log(error);\r\n            runInAction(() => {\r\n                this.loadingInitial=false;\r\n            })\r\n\r\n        }\r\n    }\r\n\r\n    validateRow =async(PathName:string) =>{\r\n\r\n        var startingRow = 0;\r\n        var found = false;\r\n        var EndingRow = this.DirectoryLink.length;\r\n        for(var row=0;row<EndingRow;row++){\r\n            if(this.DirectoryLink[row] === PathName){\r\n                startingRow=row;\r\n                found=true;\r\n            }\r\n        }\r\n        if(found){\r\n            this.DirectoryLink.splice(startingRow,EndingRow);\r\n        }\r\n    }\r\n\r\n    loadDirectoryFiles = async (PathName: string) => {\r\n\r\n        this.loadingInitial=true;\r\n        this.savedRegistry.clear(); \r\n        try{\r\n            const savedDirectory = await agent.SavedFiles.getDirectoryDetail(PathName);\r\n            runInAction(() => {\r\n            this.DirectoryLink.splice(0,1);\r\n            this.DirectoryLink.unshift(this.APIfirstParameter);            \r\n            const PathNameSplit = PathName.split('/');\r\n            PathNameSplit.forEach((object,i) => {\r\n                this.validateRow(object);\r\n                this.DirectoryLink.push(object);\r\n            })            \r\n\r\n                savedDirectory.forEach(savedDirectory =>{\r\n                    this.setActivity(savedDirectory);\r\n                })\r\n                this.loadingInitial=false;    \r\n            })\r\n        }\r\n        catch(error){\r\n            console.log(error);\r\n            runInAction(() => {\r\n                this.loadingInitial=false;\r\n            })\r\n\r\n        }\r\n    }\r\n\r\n\r\n    private setActivity = (savedFile:SavedFile) =>{\r\n        this.savedRegistry.set(savedFile.path,savedFile);        \r\n    }\r\n \r\n}","import { makeAutoObservable, runInAction } from \"mobx\";\r\nimport { history } from \"../..\";\r\nimport agent from \"../api/agent\";\r\nimport { User, UserFormValues } from \"../Models/user\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class UserStore{\r\n    user: User | null =null;\r\n    constructor(){\r\n        makeAutoObservable(this);\r\n    }\r\n    get isLoggedIn()\r\n    {\r\n        return !!this.user;\r\n    }\r\n    login = async (creds: UserFormValues) => {\r\n        try{\r\n            const user = await agent.Account.login(creds);            \r\n            store.commonStore.setToken(user.token);\r\n            runInAction(() => this.user = user);\r\n            history.push('/activities');\r\n            store.modalStore.closeModal();\r\n        }\r\n        catch(error){\r\n            throw error;\r\n        }\r\n    }\r\n    logout = () => {\r\n        store.commonStore.setToken(null);\r\n        window.localStorage.removeItem('jwt');\r\n        this.user = null;\r\n        history.push('/');\r\n    }\r\n    getUser = async () => {\r\n        try{\r\n            const user = await agent.Account.current();\r\n            runInAction(()=> this.user = user);\r\n        }\r\n        catch(error){\r\n            console.log(error);\r\n        }\r\n    }\r\n    register = async(creds: UserFormValues) =>{\r\n        try{\r\n            const user = await agent.Account.register(creds);            \r\n            store.commonStore.setToken(user.token);\r\n            runInAction(() => this.user = user);\r\n            history.push('/activities');\r\n            store.modalStore.closeModal();\r\n        }\r\n        catch(error){\r\n            throw error;\r\n        }\r\n    }\r\n}","import { createContext, useContext } from \"react\";\r\nimport ActivityStore from \"./activityStore\";\r\nimport Commonstore from \"./commonStore\";\r\nimport ModalStore from \"./modalStore\";\r\nimport SavedFileStore from \"./savedFileStore\";\r\nimport UserStore from \"./userStore\";\r\n\r\ninterface Store{\r\n    activityStore:ActivityStore;\r\n    commonStore:Commonstore;\r\n    userStore:UserStore;\r\n    modalStore:ModalStore;\r\n    savedFileStore:SavedFileStore;\r\n}\r\n\r\nexport const store:Store={\r\n    activityStore: new ActivityStore(),\r\n    commonStore: new Commonstore(),\r\n    userStore: new UserStore(),\r\n    modalStore: new ModalStore(),\r\n    savedFileStore: new SavedFileStore()\r\n}\r\n\r\nexport const StoreContext = createContext(store);\r\n\r\nexport function useStore(){\r\n    return useContext(StoreContext);\r\n}\r\n","import { makeAutoObservable, reaction } from \"mobx\";\r\nimport { ServerError } from \"../Models/serverError\";\r\n\r\nexport default class Commonstore{\r\n    error: ServerError | null = null;\r\n    token: string | null = window.localStorage.getItem('jwt');\r\n    appLoaded= false;\r\n    constructor(){\r\n        makeAutoObservable(this);\r\n\r\n        reaction(()=>this.token,\r\n        token =>{\r\n            if(token){\r\n                window.localStorage.setItem('jwt',token)\r\n            }\r\n            else\r\n                window.localStorage.removeItem('jwt')\r\n        })\r\n    }\r\n\r\n    setServerError = (error: ServerError) =>{\r\n        this.error = error;\r\n    }\r\n    setToken =(token:string | null) => {\r\n        this.token = token;\r\n    }\r\n    setAppLoaded = () => {\r\n        this.appLoaded=true;\r\n    }\r\n}","import { makeAutoObservable } from \"mobx\"\r\n\r\ninterface Modal{\r\n    open:boolean,\r\n    body:JSX.Element | null\r\n}\r\n\r\nexport default class ModalStore{\r\n    modal: Modal = {\r\n        open:false,\r\n        body:null\r\n    }\r\n    constructor(){\r\n        makeAutoObservable(this);\r\n    }\r\n    openModal = (Content: JSX.Element) =>{\r\n        this.modal.open=true;\r\n        this.modal.body=Content;\r\n    }\r\n    closeModal = () =>{\r\n        this.modal.open=false;\r\n        this.modal.body=null;\r\n    }\r\n}","import { observer } from 'mobx-react-lite';\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport { Button, Container, Dropdown, Image, Menu } from 'semantic-ui-react'\r\nimport { useStore } from '../stores/store';\r\n\r\nexport default observer(function NavBar()\r\n{\r\n    const {userStore: {user, logout}} = useStore();\r\n    return(\r\n        <Menu inverted fixed='top'>\r\n            <Container>\r\n                <Menu.Item as={NavLink} exact to='/' header>\r\n                    <img src=\"/Asset/logo.png\" alt=\"logo\" style={{marginRight: '10px'}} />\r\n                    React With DotNet\r\n                </Menu.Item>\r\n                <Menu.Item as={NavLink} to='/activities' name=\"Activities\" />\r\n                <Menu.Item as={NavLink} to='/errors' name=\"Errors\" />\r\n                <Menu.Item as={NavLink} to='/files' name=\"Files\" />\r\n                <Menu.Item>\r\n                    <Button as={NavLink} to='/createActivity' positive content='Create Activity' />\r\n                </Menu.Item>\r\n                <Menu.Item position='right'>\r\n                    <Image src={user?.image || '/asset/user.png'} avatar spaced='right' />\r\n                    <Dropdown pointing='top left' text={user?.displayName}>\r\n                        <Dropdown.Menu>\r\n                            <Dropdown.Item as ={Link} to={`/profile/${user?.username}`} text =\"My Profile\" icon='user' />\r\n                            <Dropdown.Item onClick={logout} text='Logout' icon='power' />\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                </Menu.Item>\r\n            </Container>\r\n\r\n        </Menu>\r\n    )\r\n})","import React from 'react'\r\nimport { Dimmer,Loader } from 'semantic-ui-react'\r\n\r\ninterface Props{\r\ninverted?:boolean;\r\ncontent?:string;\r\n}\r\n\r\nexport default function LoadingComponent({inverted=true,content='Loading....'}: Props){\r\n    return(\r\n        <Dimmer active={true} inverted={inverted}>\r\n            <Loader content={content} />\r\n        </Dimmer>\r\n        \r\n    )\r\n}\r\n","import Calendar from \"react-calendar\";\r\nimport { Header, Menu } from \"semantic-ui-react\";\r\n\r\nexport default function ActivityFilters(){\r\n    return(\r\n        <>\r\n            <Menu vertical size='large' style={{width:'100%', marginTop:27}}>\r\n                <Header icon='filter' attached color='teal' content='Filters' />\r\n                <Menu.Item content='All Activities' />\r\n                <Menu.Item content= \"I'm going\" />\r\n                <Menu.Item content= \"I'm hosting\" />\r\n            </Menu>\r\n            <Header />\r\n            <Calendar />\r\n        </>\r\n\r\n    )\r\n}","import { Link } from \"react-router-dom\";\r\nimport { Button, Icon, Item, Segment, SegmentGroup } from \"semantic-ui-react\";\r\nimport { Activity } from \"../../../App/Models/activity\";\r\nimport {format} from 'date-fns';\r\n\r\ninterface Props{\r\n    activity:Activity\r\n}\r\n\r\n\r\nexport default function ActivityListItem({activity}:Props) {\r\n    return(\r\n        <SegmentGroup>\r\n            <Segment>\r\n                <Item.Group>\r\n                    <Item>\r\n                        <Item.Image size='tiny' circular src='/asset/user.png' />\r\n                        <Item.Content>\r\n                            <Item.Header as={Link} to={`/activities/${activity.activityID}`}>\r\n                                {activity.title}\r\n                            </Item.Header>\r\n                            <Item.Description>\r\n                                Hosted by ....\r\n                            </Item.Description>\r\n                        </Item.Content>\r\n                    </Item>\r\n                </Item.Group>\r\n            </Segment>\r\n            <Segment>\r\n                <span>\r\n                    <Icon name='clock' />{format(activity.date!,'dd MMMM yyyy h:mm aa')}\r\n                    <Icon name='marker' />{activity.venue}\r\n                </span>\r\n            </Segment>\r\n            <Segment secondary>\r\n                Attendees go there\r\n            </Segment>\r\n            <Segment clearing>\r\n                <span>\r\n                    {activity.description}\r\n                </span>\r\n                <Button \r\n                as={Link} \r\n                to={`/activities/${activity.activityID}`} \r\n                color='teal'\r\n                floated='right'\r\n                content='View'\r\n                />\r\n            </Segment>\r\n        </SegmentGroup>\r\n\r\n    )\r\n}\r\n","import { observer } from 'mobx-react-lite';\r\nimport { Fragment } from 'react';\r\nimport {  Header } from 'semantic-ui-react'\r\nimport { useStore } from '../../../App/stores/store';\r\nimport ActivityListItem from './ActivityListItem';\r\n\r\nexport default observer(function ActivityList(){\r\n    const{activityStore} = useStore();\r\n    const{groupedActivities} = activityStore;\r\n\r\n    return (\r\n        <>\r\n            {groupedActivities.map(([group,activities]) => (\r\n                \r\n                <Fragment key={group}>\r\n                    <Header sub color='teal'>\r\n                        {group}\r\n                    </Header>\r\n                        {\r\n                            activities.map(activity =>(\r\n                                <ActivityListItem key={activity.activityID} activity={activity} />\r\n                            ))\r\n                        }\r\n                </Fragment>\r\n            ))}\r\n        </>\r\n\r\n\r\n\r\n    )\r\n})","import { observer } from 'mobx-react-lite'\r\nimport { useEffect } from 'react'\r\nimport { Grid } from 'semantic-ui-react'\r\nimport LoadingComponent from '../../../App/Layout/LoadingComponents'\r\nimport { useStore } from '../../../App/stores/store'\r\nimport ActivityFilters from './ActivityFilters'\r\nimport ActivityList from './ActivityList'\r\n\r\n\r\nexport default observer(function ActivityDashboard(){\r\n        const{activityStore} = useStore();\r\n        const { loadActivities,activityRegistry} = activityStore;\r\n      \r\n        useEffect(() => {\r\n        if(activityRegistry.size <= 1) loadActivities();\r\n        },[activityRegistry.size,loadActivities])\r\n\r\n\r\n      \r\n        if(activityStore.loadingInitial) return <LoadingComponent content=\"Loading Activities\" />\r\n      \r\nreturn(\r\n    <Grid>\r\n        <Grid.Column width='10'>\r\n            <ActivityList />\r\n        </Grid.Column>\r\n        <Grid.Column width='6' >\r\n            <ActivityFilters />\r\n        </Grid.Column>\r\n    </Grid>\r\n\r\n)\r\n\r\n})","import { useField } from \"formik\"\r\nimport { Form, Label } from \"semantic-ui-react\"\r\n\r\ninterface Props {\r\n    placeholder:string;\r\n    name: string;\r\n    type?: string;\r\n    label?: string;\r\n}\r\nexport default function MyTextInput(props:Props){\r\n    const [fields,meta] = useField(props.name)\r\n    return(\r\n        <Form.Field error={meta.touched && !!meta.error}>\r\n            <label>{props.label}</label>\r\n            <input {...fields} {...props} />\r\n            {meta.touched && meta.error ? (\r\n                <Label basic color='red'>{meta.error}</Label>\r\n            ) : null}\r\n        </Form.Field>\r\n\r\n    )\r\n}\r\n","import { ErrorMessage, Formik } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Button, Form, Header, Label } from \"semantic-ui-react\";\r\nimport MyTextInput from \"../../App/common/form/MyTextInput\";\r\nimport { useStore } from \"../../App/stores/store\";\r\n\r\nexport default observer(function LoginForm(){\r\n    const {userStore} = useStore();\r\n    return(\r\n        <Formik \r\n        initialValues={{email:'',password:'',error:null}}\r\n        onSubmit={(values,{setErrors}) => userStore.login(values).catch(error => setErrors({error: 'Invalid email or password'})) }\r\n        >\r\n            {({handleSubmit,isSubmitting,errors}) => (\r\n                <Form className='ui form' onSubmit={handleSubmit} autoComplete='off'>\r\n                    <Header as='h2' content='Login to the Application' color='teal' textAlign='center' />\r\n                    <MyTextInput name='email' placeholder='Email' />\r\n                    <MyTextInput name='password' placeholder='Password' type='password' />\r\n                    <ErrorMessage \r\n                        name='error' render={() => <Label style={{marginBottom:10}} basic color='red' content={errors.error} />}\r\n                    />\r\n                    <Button loading={isSubmitting} positive content='Login' type='submit' fluid />\r\n                </Form>\r\n            )}\r\n\r\n        </Formik>\r\n    )\r\n\r\n})","import { Message } from \"semantic-ui-react\";\r\n\r\ninterface Props{\r\n    errors:any;\r\n}\r\n\r\nexport default function ValidationError({errors}: Props){\r\n    return(\r\n        <Message error>\r\n            {errors && (\r\n                <Message.List>\r\n                    {errors.map((err:any,i: any)=>(\r\n                        <Message.Item key={i}>{err}</Message.Item>\r\n                    ))}\r\n                </Message.List>\r\n            )}\r\n        </Message>\r\n    )\r\n}","import { ErrorMessage, Formik } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Button, Form, Header } from \"semantic-ui-react\";\r\nimport MyTextInput from \"../../App/common/form/MyTextInput\";\r\nimport { useStore } from \"../../App/stores/store\";\r\nimport * as Yup from 'yup'\r\nimport ValidationError from \"../errors/ValidationError\";\r\n\r\nexport default observer(function RegisterForm(){\r\n    const {userStore} = useStore();\r\n    return(\r\n        <Formik \r\n        initialValues={{displayName:'',userName:'',email:'',password:'',error:null}}\r\n        onSubmit={(values,{setErrors}) => userStore.register(values).catch(error => setErrors({error})) }\r\n        validationSchema={Yup.object({\r\n            displayName: Yup.string().required(),\r\n            userName: Yup.string().required(),\r\n            email: Yup.string().required().email(),\r\n            password: Yup.string().required(),\r\n        })}\r\n        >\r\n            {({handleSubmit,isSubmitting,errors,isValid,dirty}) => (\r\n                <Form className='ui form error' onSubmit={handleSubmit} autoComplete='off'>\r\n                    <Header as='h2' content='Sign Up to the Application' color='teal' textAlign='center' />\r\n                    <MyTextInput name='displayName' placeholder='Display Name' />\r\n                    <MyTextInput name='userName' placeholder='User Name' />\r\n                    <MyTextInput name='email' placeholder='Email' />\r\n                    <MyTextInput name='password' placeholder='Password' type='password' />\r\n                    <ErrorMessage \r\n                        name='error' \r\n                        render={() => \r\n                            <ValidationError errors={errors.error} />\r\n                            }\r\n                    />\r\n                    <Button disabled={!isValid || !dirty || isSubmitting} loading={isSubmitting} positive content='Register' type='submit' fluid />\r\n                </Form>\r\n            )}\r\n\r\n        </Formik>\r\n    )\r\n\r\n})","import { observer } from 'mobx-react-lite';\r\nimport { Link } from 'react-router-dom'\r\nimport { Button, Container, Header, Image, Segment } from 'semantic-ui-react'\r\nimport { useStore } from '../../App/stores/store'\r\nimport LoginForm from '../users/LoginForm'\r\nimport RegisterForm from '../users/RegisterForm';\r\n\r\nexport default observer(function HomePage(){\r\n    const {userStore,modalStore} = useStore();\r\n    return(\r\n        <Segment inverted textAlign='center' vertical className='masthead'>\r\n            <Container text>\r\n                <Header as='h1' inverted>\r\n                    <Image size='massive' src='/asset/logo.png' alt='logo' style={{marginBottom:12}} />\r\n                    StrandUSA\r\n                </Header>\r\n                {userStore.isLoggedIn ? (\r\n                    <>\r\n                        <Header as='h2' inverted content='Welcome to React With DotNet' />\r\n                        <Button as={Link} to='/activities' size='huge' inverted>\r\n                            Go to Activities\r\n                        </Button>\r\n                    </>\r\n                ) : (\r\n                    <>\r\n                       <Button onClick={() => modalStore.openModal(<LoginForm />)} size='huge' inverted>\r\n                            Login\r\n                        </Button>\r\n                        <Button onClick={() => modalStore.openModal(<RegisterForm />)} size='huge' inverted>\r\n                            Register\r\n                        </Button>\r\n                    </>\r\n                )}                \r\n            </Container>\r\n        </Segment>\r\n\r\n    )\r\n})","import { useField } from \"formik\"\r\nimport { Form, Label } from \"semantic-ui-react\"\r\n\r\ninterface Props {\r\n    placeholder:string;\r\n    name: string;\r\n    rows:number;\r\n    label?: string;\r\n}\r\nexport default function MyTextArea(props:Props){\r\n    const [fields,meta] = useField(props.name)\r\n    return(\r\n        <Form.Field error={meta.touched && !!meta.error}>\r\n            <label>{props.label}</label>\r\n            <textarea {...fields} {...props} />\r\n            {meta.touched && meta.error ? (\r\n                <Label basic color='red'>{meta.error}</Label>\r\n            ) : null}\r\n        </Form.Field>\r\n\r\n    )\r\n}\r\n","import { useField } from \"formik\"\r\nimport { Form, Label, Select } from \"semantic-ui-react\"\r\n\r\ninterface Props {\r\n    placeholder:string;\r\n    name: string;\r\n    options:any;\r\n    label?: string;\r\n}\r\nexport default function MySelectInput(props:Props){\r\n    const [fields,meta,helpers] = useField(props.name)\r\n    return(\r\n        <Form.Field error={meta.touched && !!meta.error}>\r\n            <label>{props.label}</label>\r\n            <Select \r\n                clearable\r\n                options={props.options}\r\n                value={fields.value || null}\r\n                onChange={(e,d)=>helpers.setValue(d.value)}\r\n                onBlur={()=> helpers.setTouched(true)}\r\n                placeholder={props.placeholder}\r\n            />\r\n\r\n            {meta.touched && meta.error ? (\r\n                <Label basic color='red'>{meta.error}</Label>\r\n            ) : null}\r\n        </Form.Field>\r\n\r\n    )\r\n}\r\n","import { useField } from \"formik\"\r\nimport { Form, Label } from \"semantic-ui-react\"\r\nimport DatePicker,{ReactDatePickerProps} from 'react-datepicker'\r\n\r\n\r\nexport default function MyDateInput(props:Partial<ReactDatePickerProps>){\r\n    const [fields,meta,helpers] = useField(props.name!)\r\n    return(\r\n        <Form.Field error={meta.touched && !!meta.error}>\r\n            <DatePicker \r\n                {...fields}\r\n                {...props}\r\n                selected={(fields.value && new Date(fields.value)) || null}\r\n                onChange={value => helpers.setValue(value)}\r\n            />\r\n            {meta.touched && meta.error ? (\r\n                <Label basic color='red'>{meta.error}</Label>\r\n            ) : null}\r\n        </Form.Field>\r\n\r\n    )\r\n}\r\n","\r\nexport const categoryOptions = [\r\n    {text:'Drinks',value:'drinks'},\r\n    {text:'Culture',value:'culture'},\r\n    {text:'Film',value:'film'},\r\n    {text:'Food',value:'food'},\r\n    {text:'Music',value:'music'},\r\n    {text:'Travel',value:'travel'},\r\n]","import { observer } from 'mobx-react-lite'\r\nimport {  useEffect, useState } from 'react'\r\nimport { useHistory, useParams } from 'react-router'\r\nimport { Button, Header, Segment } from 'semantic-ui-react'\r\nimport LoadingComponent from '../../../App/Layout/LoadingComponents'\r\nimport { useStore } from '../../../App/stores/store'\r\nimport {v4 as uuid} from 'uuid';\r\nimport { Link } from 'react-router-dom'\r\nimport { Formik,Form } from 'formik'\r\nimport * as Yup from 'yup';\r\nimport MyTextInput from '../../../App/common/form/MyTextInput'\r\nimport MyTextArea from '../../../App/common/form/MyTextArea'\r\nimport MySelectInput from '../../../App/common/form/MySelectInput'\r\nimport MyDateInput from '../../../App/common/form/MyDateInput'\r\nimport { categoryOptions } from '../../../App/common/options/CategoryOptions'\r\nimport { Activity } from '../../../App/Models/activity'\r\n\r\n\r\nexport default observer(function ActivityForm(){\r\n\r\n    const history = useHistory();\r\n\r\n    const{activityStore} = useStore();\r\n\r\n    const{createActivity,updateActivity,loading,loadActivity,loadingInitial} = activityStore\r\n\r\n    const{id} = useParams<{id:string}>();\r\n    const [activity,setActivity] = useState<Activity>({\r\n        activityID:'',\r\n        title:'',\r\n        category:'',\r\n        description:'',\r\n        date:null,\r\n        city:'',\r\n        venue:''\r\n    });\r\n\r\n    const validationSchema = Yup.object({\r\n        title: Yup.string().required('The Activity Title is required'),\r\n        description: Yup.string().required('The Activity Description is required'),\r\n        category: Yup.string().required(),\r\n        date: Yup.string().required('Date is required').nullable(),\r\n        city: Yup.string().required(),\r\n        venue: Yup.string().required(),\r\n    })\r\n\r\n    useEffect(() => {\r\n        if(id) loadActivity(id).then(activity => setActivity(activity!))\r\n    },[id,loadActivity]);\r\n\r\n    function handleFormSubmit(activity:Activity)\r\n    {\r\n        if(activity.activityID.length === 0)\r\n        {\r\n            let newActivity ={\r\n                ...activity,\r\n                activityID:uuid()\r\n            }\r\n            createActivity(newActivity).then(() => history.push(`/activities/${newActivity.activityID}`))\r\n\r\n        }else\r\n        {\r\n            updateActivity(activity).then(() => history.push(`/activities/${activity.activityID}`))\r\n        }\r\n    }\r\n\r\n    if(loadingInitial) return <LoadingComponent content=\"Loading Components...\" />\r\n    return(\r\n        <Segment clearing>\r\n            <Header content='Activity Details' sub color='teal' />\r\n            <Formik \r\n            validationSchema={validationSchema} \r\n            enableReinitialize initialValues={activity} \r\n            onSubmit={values => handleFormSubmit(values)}>\r\n            {({handleSubmit,isValid,isSubmitting,dirty})=>(\r\n                <Form className='ui form' onSubmit={handleSubmit} autoComplete='off'>\r\n                    <MyTextInput name='title' placeholder='Title' />\r\n                    <MyTextArea name='description' placeholder='Description' rows={3} />\r\n                    <MySelectInput options={categoryOptions} name='category' placeholder='Category' />\r\n                    <MyDateInput \r\n                        showTimeSelect\r\n                        timeCaption='time'\r\n                        dateFormat ='MMMM dd, yyyy h:mm aa'\r\n                        name='date' \r\n                        placeholderText='Date'                         \r\n                    />\r\n                    <Header content='Location Details' sub color='teal' />\r\n                    <MyTextInput name='city' placeholder='City' />\r\n                    <MyTextInput name='venue' placeholder='Venue' />\r\n                    <Button\r\n                    disabled={isSubmitting || !dirty || !isValid} \r\n                    loading={loading} \r\n                    floated='right' \r\n                    positive type='submit' content='Submit' />\r\n                    <Button as={Link} to='/activities' floated='right' type='button' content='Cancel' />                    \r\n                </Form> \r\n            )}\r\n            </Formik>\r\n\r\n        </Segment>\r\n    )\r\n})","import { observer } from 'mobx-react-lite'\r\nimport React from 'react'\r\nimport {Segment, Header, Comment, Form, Button} from 'semantic-ui-react'\r\n\r\nexport default observer(function ActivityDetailedChat() {\r\n    return (\r\n        <>\r\n            <Segment\r\n                textAlign='center'\r\n                attached='top'\r\n                inverted\r\n                color='teal'\r\n                style={{border: 'none'}}\r\n            >\r\n                <Header>Chat about this event</Header>\r\n            </Segment>\r\n            <Segment attached>\r\n                <Comment.Group>\r\n                    <Comment>\r\n                        <Comment.Avatar src='/asset/user.png'/>\r\n                        <Comment.Content>\r\n                            <Comment.Author as='a'>Matt</Comment.Author>\r\n                            <Comment.Metadata>\r\n                                <div>Today at 5:42PM</div>\r\n                            </Comment.Metadata>\r\n                            <Comment.Text>How artistic!</Comment.Text>\r\n                            <Comment.Actions>\r\n                                <Comment.Action>Reply</Comment.Action>\r\n                            </Comment.Actions>\r\n                        </Comment.Content>\r\n                    </Comment>\r\n\r\n                    <Comment>\r\n                        <Comment.Avatar src='/asset/user.png'/>\r\n                        <Comment.Content>\r\n                            <Comment.Author as='a'>Joe Henderson</Comment.Author>\r\n                            <Comment.Metadata>\r\n                                <div>5 days ago</div>\r\n                            </Comment.Metadata>\r\n                            <Comment.Text>Dude, this is awesome. Thanks so much</Comment.Text>\r\n                            <Comment.Actions>\r\n                                <Comment.Action>Reply</Comment.Action>\r\n                            </Comment.Actions>\r\n                        </Comment.Content>\r\n                    </Comment>\r\n\r\n                    <Form reply>\r\n                        <Form.TextArea/>\r\n                        <Button\r\n                            content='Add Reply'\r\n                            labelPosition='left'\r\n                            icon='edit'\r\n                            primary\r\n                        />\r\n                    </Form>\r\n                </Comment.Group>\r\n            </Segment>\r\n        </>\r\n\r\n    )\r\n})\r\n","import { observer } from 'mobx-react-lite';\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport {Button, Header, Item, Segment, Image} from 'semantic-ui-react'\r\nimport { Activity } from '../../../App/Models/activity';\r\nimport {format} from 'date-fns'\r\n\r\nconst activityImageStyle = {\r\n    filter: 'brightness(30%)'\r\n};\r\n\r\nconst activityImageTextStyle = {\r\n    position: 'absolute',\r\n    bottom: '5%',\r\n    left: '5%',\r\n    width: '100%',\r\n    height: 'auto',\r\n    color: 'white'\r\n};\r\n\r\ninterface Props {\r\n    activity: Activity\r\n}\r\n\r\nexport default observer (function ActivityDetailedHeader({activity}: Props) {\r\n    return (\r\n        <Segment.Group>\r\n            <Segment basic attached='top' style={{padding: '0'}}>\r\n                <Image src={`/asset/categoryImages/${activity.category}.jpg`} fluid style={activityImageStyle}/>\r\n                <Segment style={activityImageTextStyle} basic>\r\n                    <Item.Group>\r\n                        <Item>\r\n                            <Item.Content>\r\n                                <Header\r\n                                    size='huge'\r\n                                    content={activity.title}\r\n                                    style={{color: 'white'}}\r\n                                />\r\n                                <p>{format(activity.date!,'dd MMMM yyyy')}</p>\r\n                                <p>\r\n                                    Hosted by <strong>Bob</strong>\r\n                                </p>\r\n                            </Item.Content>\r\n                        </Item>\r\n                    </Item.Group>\r\n                </Segment>\r\n            </Segment>\r\n            <Segment clearing attached='bottom'>\r\n                <Button color='teal'>Join Activity</Button>\r\n                <Button>Cancel attendance</Button>\r\n                <Button as={Link} to={`/manage/${activity.activityID}`} color='orange' floated='right'>\r\n                    Manage Event\r\n                </Button>\r\n            </Segment>\r\n        </Segment.Group>\r\n    )\r\n})\r\n","import { observer } from 'mobx-react-lite';\r\nimport React from 'react'\r\nimport {Segment, Grid, Icon} from 'semantic-ui-react'\r\nimport { Activity } from '../../../App/Models/activity';\r\nimport {format} from 'date-fns'\r\n\r\ninterface Props {\r\n    activity: Activity\r\n}\r\n\r\nexport default observer(function ActivityDetailedInfo({activity}: Props) {\r\n    return (\r\n        <Segment.Group>\r\n            <Segment attached='top'>\r\n                <Grid>\r\n                    <Grid.Column width={1}>\r\n                        <Icon size='large' color='teal' name='info'/>\r\n                    </Grid.Column>\r\n                    <Grid.Column width={15}>\r\n                        <p>{activity.description}</p>\r\n                    </Grid.Column>\r\n                </Grid>\r\n            </Segment>\r\n            <Segment attached>\r\n                <Grid verticalAlign='middle'>\r\n                    <Grid.Column width={1}>\r\n                        <Icon name='calendar' size='large' color='teal'/>\r\n                    </Grid.Column>\r\n                    <Grid.Column width={15}>\r\n            <span>\r\n              {format(activity.date!,'dd MMMM yyyy hh:mm aa')}\r\n            </span>\r\n                    </Grid.Column>\r\n                </Grid>\r\n            </Segment>\r\n            <Segment attached>\r\n                <Grid verticalAlign='middle'>\r\n                    <Grid.Column width={1}>\r\n                        <Icon name='marker' size='large' color='teal'/>\r\n                    </Grid.Column>\r\n                    <Grid.Column width={11}>\r\n                        <span>{activity.venue}, {activity.city}</span>\r\n                    </Grid.Column>\r\n                </Grid>\r\n            </Segment>\r\n        </Segment.Group>\r\n    )\r\n})\r\n","import { Segment, List, Label, Item, Image } from 'semantic-ui-react'\r\nimport { Link } from 'react-router-dom'\r\nimport { observer } from 'mobx-react-lite'\r\n\r\nexport default observer(function ActivityDetailedSidebar () {\r\n    return (\r\n        <>\r\n            <Segment\r\n                textAlign='center'\r\n                style={{ border: 'none' }}\r\n                attached='top'\r\n                secondary\r\n                inverted\r\n                color='teal'\r\n            >\r\n                3 People Going\r\n            </Segment>\r\n            <Segment attached>\r\n                <List relaxed divided>\r\n                    <Item style={{ position: 'relative' }}>\r\n                        <Label\r\n                            style={{ position: 'absolute' }}\r\n                            color='orange'\r\n                            ribbon='right'\r\n                        >\r\n                            Host\r\n                        </Label>\r\n                        <Image size='tiny' src={'/asset/user.png'} />\r\n                        <Item.Content verticalAlign='middle'>\r\n                            <Item.Header as='h3'>\r\n                                <Link to={`#`}>Bob</Link>\r\n                            </Item.Header>\r\n                            <Item.Extra style={{ color: 'orange' }}>Following</Item.Extra>\r\n                        </Item.Content>\r\n                    </Item>\r\n\r\n                    <Item style={{ position: 'relative' }}>\r\n                        <Image size='tiny' src={'/asset/user.png'} />\r\n                        <Item.Content verticalAlign='middle'>\r\n                            <Item.Header as='h3'>\r\n                                <Link to={`#`}>Tom</Link>\r\n                            </Item.Header>\r\n                            <Item.Extra style={{ color: 'orange' }}>Following</Item.Extra>\r\n                        </Item.Content>\r\n                    </Item>\r\n\r\n                    <Item style={{ position: 'relative' }}>\r\n                        <Image size='tiny' src={'/asset/user.png'} />\r\n                        <Item.Content verticalAlign='middle'>\r\n                            <Item.Header as='h3'>\r\n                                <Link to={`#`}>Sally</Link>\r\n                            </Item.Header>\r\n                        </Item.Content>\r\n                    </Item>\r\n                </List>\r\n            </Segment>\r\n        </>\r\n\r\n    )\r\n})\r\n","import { observer } from 'mobx-react-lite';\r\nimport { useEffect } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { Grid } from 'semantic-ui-react'\r\nimport LoadingComponent from '../../../App/Layout/LoadingComponents';\r\nimport { useStore } from '../../../App/stores/store'\r\nimport ActivityDetailedChat from './ActivityDetailedChat';\r\nimport ActivityDetailedHeader from './ActivityDetailedHeader';\r\nimport ActivityDetailedInfo from './ActivityDetailedInfo';\r\nimport ActivityDetailedSideBar from './ActivityDetailedSideBar';\r\n\r\n\r\nexport default observer(function ActivityDetails()\r\n{\r\n    const{activityStore} = useStore();\r\n    const{selectedActivity: activity,loadActivity,loadingInitial} = activityStore;\r\n    const{id} = useParams<{id: string}>();\r\n\r\n    useEffect(() =>{\r\n        if(id) loadActivity(id)\r\n    },[id,loadActivity]);\r\n\r\n\r\n    if(loadingInitial || !activity) return <LoadingComponent />;\r\n\r\n    return(\r\n        <Grid>\r\n            <Grid.Column width={10}>\r\n                <ActivityDetailedHeader activity={activity} />\r\n                <ActivityDetailedInfo activity={activity} />\r\n                <ActivityDetailedChat />\r\n            </Grid.Column>\r\n            <Grid.Column width={6}>\r\n                <ActivityDetailedSideBar />\r\n            </Grid.Column>\r\n        </Grid>\r\n\r\n    )\r\n\r\n})","import React, { useState } from 'react';\r\nimport {Button, Header, Segment} from \"semantic-ui-react\";\r\nimport axios from 'axios';\r\nimport ValidationError from './ValidationError';\r\n\r\nexport default function TestErrors() {\r\n    const baseUrl = process.env.REACT_APP_API_URL\r\n    const [errors,setErrors] =useState(null);\r\n\r\n    function handleNotFound() {\r\n        axios.get(baseUrl + 'buggy/not-found').catch(err => console.log(err.response));\r\n    }\r\n\r\n    function handleBadRequest() {\r\n        axios.get(baseUrl + 'buggy/bad-request').catch(err => console.log(err.response));\r\n    }\r\n\r\n    function handleServerError() {\r\n        axios.get(baseUrl + 'buggy/server-error').catch(err => console.log(err.response));\r\n    }\r\n\r\n    function handleUnauthorised() {\r\n        axios.get(baseUrl + 'buggy/unauthorised').catch(err => console.log(err.response));\r\n    }\r\n\r\n    function handleBadGuid() {\r\n        axios.get(baseUrl + 'activities/notaguid').catch(err => console.log(err.response));\r\n    }\r\n\r\n    function handleValidationError() {\r\n        axios.post(baseUrl + 'activities', {}).catch(err => setErrors(err));\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header as='h1' content='Test Error component' />\r\n            <Segment>\r\n                <Button.Group widths='7'>\r\n                    <Button onClick={handleNotFound} content='Not Found' basic primary />\r\n                    <Button onClick={handleBadRequest} content='Bad Request' basic primary />\r\n                    <Button onClick={handleValidationError} content='Validation Error' basic primary />\r\n                    <Button onClick={handleServerError} content='Server Error' basic primary />\r\n                    <Button onClick={handleUnauthorised} content='Unauthorised' basic primary />\r\n                    <Button onClick={handleBadGuid} content='Bad Guid' basic primary />\r\n                </Button.Group>\r\n            </Segment>\r\n            {errors &&\r\n                <ValidationError errors={errors} />\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n","import { Link } from \"react-router-dom\";\r\nimport { Button, Header, Icon, Segment } from \"semantic-ui-react\";\r\n\r\nexport default function NotFound()\r\n{\r\n    return(\r\n        <Segment placeholder>\r\n            <Header icon>\r\n                <Icon name='search' />\r\n                Oops - we've looked everywhere and could not find this.\r\n            </Header>\r\n            <Segment.Inline>\r\n                <Button as={Link} to='/activities' primary >\r\n                    Back to home\r\n                </Button>\r\n            </Segment.Inline>\r\n        </Segment>\r\n    )\r\n}","import { observer } from \"mobx-react-lite\";\r\nimport { Container, Header, Segment } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../App/stores/store\";\r\n\r\nexport default observer(function ServerError(){\r\n    const {commonStore} = useStore();\r\n    return(\r\n        <Container>\r\n            <Header as='h1' content='Server Error' />\r\n            <Header sub as='h5' color='red' content={commonStore.error?.message} />\r\n            {commonStore.error?.details &&\r\n                <Segment>\r\n                    <Header as='h4' content='Stack Trace' color='teal' />\r\n                    <code style={{marginTop: '10px'}}>{commonStore.error.details}</code>\r\n                </Segment>\r\n            }\r\n        </Container>\r\n    )\r\n})","import { observer } from \"mobx-react-lite\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../stores/store\"\r\n\r\nexport default observer(function ModalContainer(){\r\n    const {modalStore} = useStore();\r\n    return(\r\n        <Modal open={modalStore.modal.open} onClose={modalStore.closeModal} size='mini'>\r\n            <Modal.Content>\r\n                {modalStore.modal.body}\r\n            </Modal.Content>\r\n        </Modal>\r\n    )\r\n})","import { observer } from 'mobx-react-lite'\r\nimport {  useEffect } from 'react';\r\nimport ReactPlayer from 'react-player';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { Grid,Header,List,Breadcrumb } from 'semantic-ui-react'\r\nimport LoadingComponent from '../../App/Layout/LoadingComponents';\r\nimport { useStore } from '../../App/stores/store'\r\n\r\nexport default observer(function SavedFile(){\r\n    const{savedFileStore} = useStore();\r\n    let BreadCrumbPath = \"\";\r\n    \r\n    const{loadSavedFiles,getLoadedSavedFiles,loadDirectoryFiles,DirectoryLink} = savedFileStore;\r\n\r\n    const{pathname} = useParams<{pathname:string}>();\r\n\r\n    let PathLink =\"\";\r\n    DirectoryLink.forEach((object,i) =>{\r\n            PathLink += object+\"/\";            \r\n            })\r\n    useEffect(() => {     \r\n            if(pathname !== undefined){                \r\n                loadDirectoryFiles(pathname);\r\n            }\r\n            else{\r\n                loadSavedFiles();                \r\n            }\r\n        \r\n        },[loadSavedFiles,pathname,loadDirectoryFiles]        \r\n        )\r\n      \r\n        if(savedFileStore.loadingInitial) return <LoadingComponent content=\"Loading Files\" />\r\n    return(\r\n        <>\r\n            {DirectoryLink.map((object,i) => { \r\n                BreadCrumbPath += \"/\"+object;\r\n                return (\r\n               <Breadcrumb key={object}>                   \r\n                   <Breadcrumb.Section key={object} as={Link} to={BreadCrumbPath} >{object}</Breadcrumb.Section>\r\n                   <Breadcrumb.Divider />\r\n                </Breadcrumb> )   \r\n } )}\r\n                \r\n            <Header as='h1' content='Folders' color='teal' />\r\n            <List divided relaxed >\r\n                {getLoadedSavedFiles.map((key,value) =>(\r\n                    key.isDirectory ? \r\n                    (            \r\n                        <List.Item key={key.path}>\r\n                        <List.Content key={key.path}>\r\n                            <List.Header as={Link} to={'/'+PathLink+key.path} key={key.path}>{key.path}</List.Header>\r\n                        </List.Content>\r\n                        </List.Item>\r\n                    \r\n                    ) : null\r\n\r\n                )   )}\r\n            </List>\r\n\r\n            <Header as='h1' content='Files' color='teal' />\r\n            <Grid>\r\n                <Grid.Row columns={4}>\r\n                {getLoadedSavedFiles.map((key,value) => (                    \r\n                    key.isDirectory ? \r\n                    null \r\n                    : key.isSamePath ? \r\n                    (\r\n                    <Grid.Column key={key.path} >\r\n                        <ReactPlayer url={key.path} controls width='100%' height='90%' />\r\n                    </Grid.Column>\r\n                    ) : null\r\n                 ) )  }\r\n                </Grid.Row>\r\n\r\n            </Grid>\r\n          \r\n        </>  \r\n    )\r\n\r\n\r\n\r\n\r\n})\r\n","import React from \"react\";\r\nimport { Redirect, RouteComponentProps, RouteProps } from \"react-router\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { useStore } from \"../stores/store\"\r\n\r\ninterface Props extends RouteProps{\r\n    component : React.ComponentType<RouteComponentProps<any>> | React.ComponentType<any>;\r\n}\r\n\r\n\r\nexport default function PrivateRoute({component: Component, ...rest }:Props){\r\n    const {userStore : {isLoggedIn}} = useStore();\r\n    return(\r\n        <Route\r\n            {...rest}\r\n            render ={(props) => isLoggedIn ? <Component {...props} /> : <Redirect to='/' /> }\r\n        \r\n        />\r\n    )\r\n}","import { Container } from 'semantic-ui-react';\nimport NavBar from './Navbar';\nimport ActivityDashboard from '../../features/activities/dashboard/ActivityDashboard';\nimport { observer } from 'mobx-react-lite';\nimport { Route, Switch, useLocation } from 'react-router';\nimport HomePage from '../../features/Home/HomePage';\nimport ActivityForm from '../../features/activities/form/ActivityForm';\nimport ActivityDetails from '../../features/activities/details/ActivityDetail';\nimport TestErrors from '../../features/errors/TestError';\nimport { ToastContainer } from 'react-toastify';\nimport NotFound from '../../features/errors/NotFound';\nimport ServerError from '../../features/errors/ServerError';\nimport { useStore } from '../stores/store';\nimport { useEffect } from 'react';\nimport LoadingComponent from './LoadingComponents';\nimport ModalContainer from '../../App/common/modals/ModalContainer';\nimport SavedFile from '../../features/filefolder/SavedFile';\nimport PrivateRoute from './PrivateRoute';\n\n\nfunction App() {\n  const location = useLocation();\n  const {commonStore,userStore} = useStore();\n\n  useEffect(() => {\n    if(commonStore.token){\n      userStore.getUser().finally(() => commonStore.setAppLoaded());\n    }else{\n      commonStore.setAppLoaded();\n    }\n  },[commonStore,userStore])\n\n  if(!commonStore.appLoaded) return <LoadingComponent content='Loading app....' />\n  return (\n    <>\n      <ToastContainer position='bottom-right' hideProgressBar />\n      <ModalContainer />\n      <Route exact path='/' component={HomePage} />\n      <Route\n        \n        path={'/(.+)'}\n        \n        render={() => (\n          <>\n          <NavBar />\n            <Container style={{marginTop :'7em'}}>\n              <Switch>\n                <PrivateRoute exact path='/activities' component={ActivityDashboard} />\n                <PrivateRoute path='/activities/:id' component={ActivityDetails} />\n                <PrivateRoute key={location.key} path={['/createActivity','/manage/:id']} component={ActivityForm} />\n                <Route path='/errors' component={TestErrors} />\n                <PrivateRoute exact path='/files' component={SavedFile} />\n                <PrivateRoute path='/files/:pathname+' component={SavedFile} />\n                <Route path='/server-error' component={ServerError} />\n                <Route component={NotFound} />\n              </Switch>\n          </Container>\n          </>\n        )}\n      />\n\n    </>\n  );\n}\n\nexport default observer(App);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport default function ScrollToTop() {\r\n    const { pathname } = useLocation();\r\n  \r\n    useEffect(() => {\r\n      window.scrollTo(0, 0);\r\n    }, [pathname]);\r\n  \r\n    return null;\r\n  }","import ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport 'react-calendar/dist/Calendar.css';\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport App from './App/Layout/App';\nimport './App/Layout/styles.css';\nimport { store, StoreContext } from './App/stores/store';\nimport reportWebVitals from './reportWebVitals';\nimport {createBrowserHistory} from 'history';\nimport {Router} from 'react-router-dom';\nimport ScrollToTop from './App/Layout/ScrollToTop';\n\nexport const history = createBrowserHistory();\n\nReactDOM.render(\n    <StoreContext.Provider value={store}>\n      <Router history={history}>\n        <ScrollToTop />\n        <App />\n      </Router>\n      \n    </StoreContext.Provider>\n    ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}